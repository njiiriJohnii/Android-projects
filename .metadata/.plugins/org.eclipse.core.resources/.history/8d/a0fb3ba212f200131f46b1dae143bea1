package com.accesscontacts.address;

import java.util.ArrayList;
import java.util.Arrays;

import com.accesscontacts.address.R;

import android.app.Activity;
import android.app.ListActivity;
import android.content.ContentResolver;
import android.content.Intent;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.provider.ContactsContract;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;

public class MainActivity extends ListActivity {
	public TextView outputText;
	private String[] arrayA;
String a="";
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		//setContentView(R.layout.activity_main);
		outputText = (TextView) findViewById(R.id.textview);
		fetchContacts();
	}
	

	StringBuffer b;
	ArrayList<String> output;
	public void fetchContacts() {

		String phoneNumber = null;
		String email = null;
//fetch contacts with, phone, email
		//get display
		Uri CONTENT_URI = ContactsContract.Contacts.CONTENT_URI;
		String _ID = ContactsContract.Contacts._ID;
		String DISPLAY_NAME = ContactsContract.Contacts.DISPLAY_NAME;
		String HAS_PHONE_NUMBER = ContactsContract.Contacts.HAS_PHONE_NUMBER;
//get number
		Uri PhoneCONTENT_URI = ContactsContract.CommonDataKinds.Phone.CONTENT_URI;
		String Phone_CONTACT_ID = ContactsContract.CommonDataKinds.Phone.CONTACT_ID;
		String NUMBER = ContactsContract.CommonDataKinds.Phone.NUMBER;
//get email
		Uri EmailCONTENT_URI =  ContactsContract.CommonDataKinds.Email.CONTENT_URI;
		String EmailCONTACT_ID = ContactsContract.CommonDataKinds.Email.CONTACT_ID;
		String EmailData = ContactsContract.CommonDataKinds.Email.DATA;

		//create an array list
 output = new ArrayList<String>();
		ContentResolver contentResolver = getContentResolver();
//content resolver allows you to excecute a URi
		Cursor cursor = contentResolver.query(CONTENT_URI, null,null, null, null);	

		// Loop for every contact in the phone
		if (cursor.getCount() > 0) {

			while (cursor.moveToNext()) {
                int id = cursor.getColumnIndex(_ID);
				String contact_id = cursor.getString(id);
				String name = cursor.getString(cursor.getColumnIndex( DISPLAY_NAME ));

				int hasPhoneNumber = Integer.parseInt(cursor.getString(cursor.getColumnIndex( HAS_PHONE_NUMBER )));

				if (hasPhoneNumber > 0) {
//append name to string 'a'
					a = name+":";
			

					// Query and loop for every phone number of the contact
					Cursor phoneCursor = contentResolver.query(PhoneCONTENT_URI, null, Phone_CONTACT_ID + " = ?", new String[] { contact_id }, null);
					//ArrayList<String> list = new ArrayList<String>();
					while (phoneCursor.moveToNext()) {
						phoneNumber = phoneCursor.getString(phoneCursor.getColumnIndex(NUMBER));
						//append phone number to the string 'a'
					a +="\n" + phoneNumber;
					}	
					phoneCursor.close();

					// Query and loop for every email of the contact
					Cursor emailCursor = contentResolver.query(EmailCONTENT_URI,	null, EmailCONTACT_ID+ " = ?", new String[] { contact_id }, null);

					while (emailCursor.moveToNext()) {

						email = emailCursor.getString(emailCursor.getColumnIndex(EmailData));

						//append email  if it exist- to string 'a' - at this point string a should have name,number  and email 
						a+="\n" + email;

					}

					emailCursor.close();
				}

			//add string a to your arraylist -string a contains - name,number and email- loop for other contacts
				output.add(a);
			}
//convert your arraylist - to String array
			arrayA = (String[])output.toArray(new String[0]);
			//pass your string array to your list - Note that this class extends ListActivity hence lines below
			 setListAdapter(new ArrayAdapter<String>(this, R.layout.list,arrayA));
			  ListView lv = getListView();//	
			
			  lv.setOnItemClickListener(new OnItemClickListener() {

					@Override
					public void onItemClick(AdapterView<?> arg0, View arg1, int pos,
							long arg3) {
			  
					//to do call on number clicked
					}	  
			  });
			  
			
		}
		else {
			
			Toast.makeText(getApplicationContext(), "No contacts to display ", Toast.LENGTH_LONG).show();
		}
	}

}